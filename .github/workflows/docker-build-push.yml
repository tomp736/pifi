name: Create and publish a Docker image

on: 
  push:
    branches:
      - main

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      
      # Read the current version number from git ls-remote
      - id: current_version
        shell: bash
        run: |
          echo $(git tag | sort -V | tail -1)
          echo "version=$(git ls-remote --tag origin | cut -d '/' -f 3 | sort -V | tail -1)" >> $GITHUB_OUTPUT
      
      # Increment the patch version number by one
      - id: patch_version
        run: |
          major=$(echo "${{ steps.current_version.outputs.version }}" | awk -F'.' '{print $1}')
          minor=$(echo "${{ steps.current_version.outputs.version }}" | awk -F'.' '{print $2}')
          patch=$(echo "${{ steps.current_version.outputs.version }}" | awk -F'.' '{print $3}')
          new_patch=$((patch+1))
          new_version="$major.$minor.$new_patch"
          echo "Updating version to $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

  build-and-push-image:
    needs: 
      - prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        image:
          - pyfi_core
          - pyfi_server

    permissions:
      contents: read
      packages: write    

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: src/${{ matrix.image }}/dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.image }}:latest
            ghcr.io/${{ github.repository }}/${{ matrix.image }}:${{ needs.prepare.steps.patch_version.outputs.new_version }}

  publish-tag:
    runs-on: ubuntu-latest
    needs: 
      - prepare
      - build-and-push-image
    permissions:
      contents: read
      packages: write

    steps:

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ needs.prepare.steps.patch_version.outputs.new_version }}
          git push origin --tags